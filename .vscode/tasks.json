{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "🔍 Full CI/CD Check",
      "detail": "Run complete local validation matching GitHub Actions CI",
      "type": "shell",
      "command": "dotnet",
      "args": ["build", "--configuration", "Release"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": "$msCompile",
      "dependsOrder": "sequence",
      "dependsOn": ["🧪 Code Quality Check", "🧪 Run Unit Tests"]
    },
    {
      "label": "🧪 Code Quality Check", 
      "detail": "Run formatting validation and code analysis",
      "type": "shell",
      "command": "dotnet",
      "args": ["format", "--verify-no-changes"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🏗️ Build All Targets",
      "detail": "Build for all platforms (Release configuration)",
      "type": "shell", 
      "command": "dotnet",
      "args": ["build", "--configuration", "Release"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🔐 Security Audit",
      "detail": "Run NuGet vulnerability checks",
      "type": "shell",
      "command": "dotnet",
      "args": ["list", "package", "--vulnerable", "--include-transitive"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always", 
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "🧽 Clean & Restore",
      "detail": "Clean bin/obj folders and restore NuGet packages",
      "type": "shell",
      "command": "dotnet",
      "args": ["clean"],
      "group": "build", 
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Clean Solution", "Restore Packages"]
    },
    {
      "label": "Clean Solution",
      "detail": "Clean all build artifacts",
      "type": "shell",
      "command": "dotnet", 
      "args": ["clean"],
      "presentation": {
        "echo": false,
        "reveal": "silent"
      },
      "problemMatcher": []
    },
    {
      "label": "Restore Packages",
      "detail": "Restore NuGet packages",
      "type": "shell",
      "command": "dotnet",
      "args": ["restore"],
      "presentation": {
        "echo": false,
        "reveal": "silent"
      },
      "problemMatcher": []
    },
    {
      "label": "⚡ Quick CI Check",
      "detail": "Fast validation - format code, build, and test",
      "type": "shell",
      "command": "dotnet",
      "args": ["test", "--blame-hang", "--blame-hang-timeout", "30s", "--configuration", "Release"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": "$msCompile",
      "dependsOrder": "sequence",
      "dependsOn": ["🎨 Format Code"]
    },
    {
      "label": "📱 Build macOS App",
      "detail": "Build macOS application bundle",
      "type": "shell",
      "command": "dotnet",
      "args": ["publish", "src/TrashMailPanda/TrashMailPanda/TrashMailPanda.csproj", "-c", "Release", "-r", "osx-x64", "--self-contained"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🚀 Run Application",
      "detail": "Run the TrashMail Panda application",
      "type": "shell",
      "command": "dotnet",
      "args": ["run", "--project", "src/TrashMailPanda/TrashMailPanda/TrashMailPanda.csproj"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "🔥 Dev Mode",
      "detail": "Start development mode",
      "type": "shell", 
      "command": "dotnet",
      "args": ["run", "--project", "src/TrashMailPanda/TrashMailPanda/TrashMailPanda.csproj"],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🧪 Run Unit Tests",
      "detail": "Run xUnit tests with coverage",
      "type": "shell",
      "command": "dotnet",
      "args": ["test", "--blame-hang", "--blame-hang-timeout", "30s", "--collect:\"XPlat Code Coverage\"", "--configuration", "Release"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🔄 Watch Unit Tests",
      "detail": "Run tests in watch mode for active development",
      "type": "shell",
      "command": "dotnet",
      "args": ["watch", "test", "--blame-hang", "--blame-hang-timeout", "30s", "--project", "src/Tests"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "new",
        "focus": true
      },
      "problemMatcher": "$msCompile"
    },
    {
      "label": "🎨 Format Code",
      "detail": "Format code using dotnet format",
      "type": "shell",
      "command": "dotnet", 
      "args": ["format"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "📊 Show Solution Info",
      "detail": "Display solution structure and project dependencies",
      "type": "shell",
      "command": "dotnet",
      "args": ["sln", "list"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ]
}
