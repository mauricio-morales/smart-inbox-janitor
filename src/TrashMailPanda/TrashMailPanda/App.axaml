<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="TrashMailPanda.App"
             xmlns:local="using:TrashMailPanda"
             RequestedThemeVariant="Light">
             <!-- "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. -->

    <Application.DataTemplates>
        <local:ViewLocator/>
    </Application.DataTemplates>
  
    <Application.Resources>
        <!-- Merged Professional Theme Resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceInclude Source="/Styles/ProfessionalTheme.axaml"/>
                <ResourceInclude Source="/Styles/Typography.axaml"/>
                <ResourceInclude Source="/Styles/Components.axaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Standard Measurements -->
            <CornerRadius x:Key="StandardCornerRadius">6</CornerRadius>
            <Thickness x:Key="StandardBorderThickness">1</Thickness>
            <Thickness x:Key="StandardPadding">12</Thickness>
        </ResourceDictionary>
    </Application.Resources>

    <Application.Styles>
        <!-- Force Light FluentTheme -->
        <FluentTheme />
        
        <!-- Professional Button Styling -->
        <Style Selector="Button.primary">
            <Setter Property="Background" Value="{DynamicResource AccentBlue}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextOnAccent}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="MinHeight" Value="36"/>
        </Style>
        
        <Style Selector="Button.primary:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource AccentBlueDark}"/>
        </Style>
        
        <Style Selector="Button.secondary">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource AccentBlue}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderLight}"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="MinHeight" Value="36"/>
        </Style>
        
        <Style Selector="Button.secondary:pointerover">
            <Setter Property="Background" Value="{DynamicResource HoverBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderMedium}"/>
        </Style>
        
        <!-- Professional Status Card Styles -->
        <Style Selector="Border.SuccessCard">
            <Setter Property="Background" Value="{DynamicResource StatusSuccessBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource StatusSuccess}"/>
            <Setter Property="BorderThickness" Value="1,1,1,3"/>
        </Style>
        
        <Style Selector="Border.WarningCard">
            <Setter Property="Background" Value="{DynamicResource StatusWarningBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource StatusWarning}"/>
            <Setter Property="BorderThickness" Value="1,1,1,3"/>
        </Style>
        
        <Style Selector="Border.ErrorCard">
            <Setter Property="Background" Value="{DynamicResource StatusErrorBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource StatusError}"/>
            <Setter Property="BorderThickness" Value="1,1,1,3"/>
        </Style>
        
        <Style Selector="Border.InfoCard">
            <Setter Property="Background" Value="{DynamicResource StatusInfoBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource StatusInfo}"/>
            <Setter Property="BorderThickness" Value="1,1,1,3"/>
        </Style>
    </Application.Styles>
</Application>