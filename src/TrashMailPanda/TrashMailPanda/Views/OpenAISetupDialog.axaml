<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:TrashMailPanda.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
        x:Class="TrashMailPanda.Views.OpenAISetupDialog"
        x:DataType="vm:OpenAISetupViewModel"
        Title="OpenAI API Setup"
        Width="1000" Height="600"
        CanResize="False"
        WindowStartupLocation="CenterScreen"
        Icon="/Assets/avalonia-logo.ico">

    <Design.DataContext>
        <vm:OpenAISetupViewModel/>
    </Design.DataContext>

    <Grid Margin="30">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="15" Margin="0,0,0,20">
            <Border Background="{DynamicResource StatusWarning}" Width="40" Height="40" CornerRadius="20">
                <TextBlock Text="🔑" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <StackPanel VerticalAlignment="Center">
                <TextBlock Text="OpenAI API Key Setup" FontSize="18" FontWeight="Bold"/>
                <TextBlock Text="Configure AI-powered email classification" FontSize="12" Foreground="Gray"/>
            </StackPanel>
        </StackPanel>

        <!-- Content - 2 Column Layout -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Left Column - Instructions -->
            <ScrollViewer Grid.Column="0">
                <StackPanel Spacing="20">
                    <StackPanel Spacing="15">
                        <TextBlock Text="How to get your OpenAI API key:" FontWeight="SemiBold" FontSize="16" Foreground="{DynamicResource TextPrimary}"/>
                        <StackPanel Spacing="8">
                            <Border Background="{DynamicResource BackgroundPrimary}" Padding="12" CornerRadius="6" BorderBrush="{DynamicResource BorderLight}" BorderThickness="1">
                                <StackPanel Spacing="6">
                                    <TextBlock Text="1. Visit platform.openai.com/api-keys" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                    <TextBlock Text="2. Sign in to your OpenAI account" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                    <TextBlock Text="3. Create a new API key" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                    <TextBlock Text="4. Copy and paste it in the form on the right" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        
                        <Button Command="{Binding OpenOpenAIDashboardCommand}"
                                Classes="secondary"
                                HorizontalAlignment="Left"
                                MinWidth="200"
                                Height="40">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <TextBlock Text="🔗" FontSize="14"/>
                                <TextBlock Text="Open OpenAI API Keys page" FontSize="13" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <!-- Additional Information -->
                    <StackPanel Spacing="15">
                        <TextBlock Text="About OpenAI API:" FontWeight="SemiBold" FontSize="16" Foreground="{DynamicResource TextPrimary}"/>
                        <Border Background="{DynamicResource BackgroundPrimary}" Padding="12" CornerRadius="6" BorderBrush="{DynamicResource BorderLight}" BorderThickness="1">
                            <StackPanel Spacing="8">
                                <TextBlock Text="• Your API key enables AI-powered email classification" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                <TextBlock Text="• Keys are stored securely using your OS keychain" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                <TextBlock Text="• You only pay for what you use (typically $0.01-$0.10/month)" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                                <TextBlock Text="• No emails are stored on OpenAI servers" FontSize="13" Foreground="{DynamicResource TextSecondary}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
            
            <!-- Right Column - API Key Input -->
            <ScrollViewer Grid.Column="2">
                <StackPanel Spacing="20">
                    
                    <!-- API Key Input -->
                    <StackPanel Spacing="12">
                        <TextBlock Text="API Key" FontWeight="SemiBold" FontSize="16" Foreground="{DynamicResource TextPrimary}"/>
                        <TextBox Text="{Binding ApiKey}"
                                 PasswordChar="*"
                                 Watermark="sk-..."
                                 MinHeight="50"
                                 FontSize="14"
                                 Padding="12"
                                 BorderBrush="{DynamicResource BorderMedium}"
                                 BorderThickness="1"
                                 CornerRadius="6"
                                 FontFamily="Consolas, Monaco, 'Courier New', monospace"/>
                        <TextBlock Text="Your API key will be stored securely on this device using OS keychain" 
                                  FontSize="12" 
                                  Foreground="{DynamicResource TextTertiary}"
                                  TextWrapping="Wrap"/>
                    </StackPanel>

                    <!-- Validation Message -->
                    <Border IsVisible="{Binding !!ValidationMessage}"
                            Classes="ErrorCard"
                            Padding="16" 
                            CornerRadius="6">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <TextBlock Text="⚠️" FontSize="16"/>
                            <TextBlock Text="{Binding ValidationMessage}" 
                                      FontSize="13" 
                                      Foreground="{DynamicResource StatusError}"
                                      TextWrapping="Wrap"
                                      VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <!-- Success Message -->
                    <Border IsVisible="{Binding IsValidated}"
                            Background="{DynamicResource StatusSuccessBackground}" 
                            Padding="16" 
                            CornerRadius="6"
                            BorderBrush="{DynamicResource StatusSuccess}" 
                            BorderThickness="1">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <TextBlock Text="✅" FontSize="16"/>
                            <TextBlock Text="API key is valid and has been saved securely" 
                                      FontSize="13" 
                                      Foreground="{DynamicResource StatusSuccess}"
                                      VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <!-- Status Message -->
                    <Border IsVisible="{Binding !!StatusMessage}"
                            Background="{DynamicResource BackgroundPrimary}"
                            Padding="12"
                            CornerRadius="6"
                            BorderBrush="{DynamicResource BorderLight}"
                            BorderThickness="1">
                        <TextBlock Text="{Binding StatusMessage}" 
                                  FontSize="12" 
                                  Foreground="{DynamicResource TextTertiary}"
                                  TextWrapping="Wrap"/>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <!-- Bottom Section with Status Bar and Buttons -->
        <Grid Grid.Row="2" RowDefinitions="Auto,Auto" Margin="0,20,0,0">
            
            <!-- Status Bar -->
            <Border Grid.Row="0" 
                    Background="{DynamicResource BackgroundPrimary}"
                    BorderBrush="{DynamicResource BorderLight}"
                    BorderThickness="1"
                    CornerRadius="6"
                    Padding="12,8"
                    Margin="0,0,0,12">
                <Grid ColumnDefinitions="Auto,*,Auto">
                    <!-- Status Icon -->
                    <TextBlock Grid.Column="0" 
                              Text="{Binding IsValidating, StringFormat='{}{0:⏳;🔑}'}"
                              FontSize="14"
                              VerticalAlignment="Center"
                              Margin="0,0,8,0"/>
                    
                    <!-- Status Message -->
                    <TextBlock Grid.Column="1" 
                              Text="{Binding StatusMessage}" 
                              FontSize="12" 
                              Foreground="{DynamicResource TextTertiary}"
                              TextWrapping="Wrap"
                              VerticalAlignment="Center"/>
                    
                    <!-- Progress Indicator (when validating) -->
                    <Border Grid.Column="2"
                            IsVisible="{Binding IsValidating}"
                            Width="16" Height="16" 
                            CornerRadius="8"
                            Background="{DynamicResource SystemAccentColor}"
                            Classes="loading-spinner"/>
                </Grid>
            </Border>

            <!-- Buttons -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="10">
                <Button Command="{Binding CancelCommand}"
                        Content="Cancel"
                        Classes="secondary"
                        MinWidth="80"
                        Height="35"/>
                
                <Button Command="{Binding ValidateAndSaveCommand}"
                        IsEnabled="{Binding CanSave}"
                        Classes="primary"
                        MinWidth="120"
                        Height="35"
                        IsDefault="True">
                    <StackPanel Orientation="Horizontal" Spacing="6">
                        <TextBlock Text="💾" FontSize="12" IsVisible="{Binding !IsValidating}"/>
                        <TextBlock Text="⏳" FontSize="12" IsVisible="{Binding IsValidating}"/>
                        <TextBlock Text="{Binding SaveButtonText}" FontSize="12" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>

    <!-- Styles for loading animation -->
    <Window.Styles>
        <Style Selector="Border.loading-spinner">
            <Style.Animations>
                <Animation Duration="0:0:1" IterationCount="Infinite">
                    <KeyFrame Cue="0%">
                        <Setter Property="RotateTransform.Angle" Value="0"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="RotateTransform.Angle" Value="360"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
            <Setter Property="RenderTransform">
                <RotateTransform/>
            </Setter>
        </Style>
    </Window.Styles>

</Window>